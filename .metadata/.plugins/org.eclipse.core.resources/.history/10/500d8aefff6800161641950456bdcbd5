package student.onlineretailer.ejb;

import java.util.Arrays;

import java.util.List;

import javax.ejb.Local;
import javax.ejb.Remote;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.EntityNotFoundException;
import javax.persistence.NonUniqueResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

import student.onlineretailer.Category;
import student.onlineretailer.Product;


/**
 * Session Bean implementation class OnlineRetailerBean
 */
@Stateless
@Local(OnlineRetailerBeanLocal.class)
@Remote(OnlineRetailerBeanRemote.class)
public class OnlineRetailerBean implements OnlineRetailerBeanRemote, OnlineRetailerBeanLocal {

	@PersistenceContext(unitName = "StudentOnlineRetailerJPA-PU")
	private EntityManager em;
	
    /**
     * Default constructor. 
     */
    public OnlineRetailerBean() {
        // TODO Auto-generated constructor stub
    }
    
    public void addCategoriesAndProducts(String ProductName, double UnitPrice, int UnitsInStock, String categoryName){
    	Product product = new Product();
    	product.setProductName(ProductName);
    	product.setUnitPrice(UnitPrice);
    	product.setUnitsInStock(UnitsInStock);
    	
    	Category category = new Category();
    	category.setCategoryName(categoryName);
    	category.setProducts(Arrays.asList(product));
    	
    	product.setCategory(category);
    	
    	em.persist(product);
    	em.persist(category);
    	
    }
    
    public List<Product> getAllProducts(){
    	TypedQuery<Product> query = em.createQuery("SELECT p FROM Product AS p", Product.class);
    	List<Product> products = query.getResultList(); 
    	return products;
    }
    
    public List<Product> getProductsByName(String name){
    	String sql = "SELECT p FROM Product AS p WHERE p.productName LIKE '%" + name + "%'";
    	TypedQuery<Product> query = em.createQuery(sql, Product.class);
    	List<Product> products = query.getResultList();
    	return products;
    }
    
    public List<Product> getProductsInCategory(String catName){
    	
    	TypedQuery<Product> query = em.createQuery("SELECT p FROM Product AS p WHERE p.category.categoryName = :name", Product.class);
    	query.setParameter("name",catName);
    	return query.getResultList();
    }
    
    public void increaseAllPrices(double priceRise){
    	List<Product> products = getAllProducts();
    	for(Product product : products){
    		double cPrice = product.getUnitPrice();
    		double nPrice = cPrice + priceRise;
    		product.setUnitPrice(nPrice);
    	}
    }

}
